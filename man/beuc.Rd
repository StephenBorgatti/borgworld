% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/b_euc.R
\name{beuc}
\alias{beuc}
\title{Compute Euclidean distance with missing value imputation}
\usage{
beuc(x, dim = "columns", ...)
}
\arguments{
\item{x}{A matrix or data frame. Non-numeric columns will be automatically removed.}

\item{dim}{Character string specifying whether to compute distances between
"rows" or "columns" (default). Accepts any string starting with "r" or "c"
(case-insensitive), so "r", "row", "rows" all work for rows, and "c", "col",
"cols", "columns" all work for columns.}

\item{...}{Additional arguments passed to \code{\link{dist}}, such as:
\itemize{
\item \code{method}: The distance measure to use. Options include
"euclidean" (default), "maximum", "manhattan", "canberra", "binary",
or "minkowski".
\item \code{p}: The power of the Minkowski distance.
}}
}
\value{
A numeric matrix containing the computed distances. Unlike \code{dist()},
this returns a full symmetric matrix with zeros on the diagonal, similar to
the output format of \code{cor()} and \code{bcor()}.
}
\description{
Computes Euclidean distance (or other distance metrics) between rows or columns
of a matrix or data frame. Unlike \code{dist()}, this function handles missing
values by imputing them with the mean, automatically ignores non-numeric columns,
defaults to computing distances between columns (similar to \code{cor()}), and
returns a full matrix (similar to \code{cor()}) rather than a dist object.
}
\details{
The function automatically removes non-numeric columns with a warning message
indicating which columns were excluded.

When missing values are present in the numeric data, the function:
\enumerate{
\item Issues a warning indicating the number and percentage of missing values
\item Imputes missing values using the mean of the corresponding row or column:
\itemize{
\item If computing distances between columns (\code{dim = "columns"}),
missing values are imputed with column means
\item If computing distances between rows (\code{dim = "rows"}),
missing values are imputed with row means
}
\item If an entire row or column consists of missing values, the global
mean is used for imputation
}
}
\examples{
# Create sample data
mat <- matrix(rnorm(20), nrow = 5, ncol = 4)
colnames(mat) <- paste0("var", 1:4)
rownames(mat) <- paste0("obs", 1:5)

# Compute distances between columns (default) - returns full matrix
beuc(mat)
beuc(mat, "columns")  # Same as above

# Compute distances between rows
beuc(mat, "rows")

# Flexible input formats
beuc(mat, "r")     # Rows (shorthand)
beuc(mat, "col")   # Columns (shorthand)

# With missing values
mat[2, 3] <- NA
mat[4, 1] <- NA
beuc(mat)  # Issues warning and imputes

# With mixed data types (non-numeric columns are ignored)
df <- data.frame(
  name = c("A", "B", "C", "D", "E"),
  x = rnorm(5),
  y = rnorm(5),
  category = factor(c("X", "Y", "X", "Y", "X")),
  z = rnorm(5)
)
beuc(df)  # Warns about non-numeric columns, uses only x, y, z

# Use different distance methods
beuc(mat, "columns", method = "manhattan")
beuc(mat, "rows", method = "maximum")

# Output is already a full matrix (no conversion needed)
result <- beuc(mat)
class(result)  # "matrix" not "dist"

}
\seealso{
\code{\link{dist}} for the base R distance function,
\code{\link{cor}} for correlation computation with similar syntax and output format,
\code{\link{bcor}} for correlation with similar data handling and output format
}
